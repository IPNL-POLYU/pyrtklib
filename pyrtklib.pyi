from typing import Iterator, List

from typing import overload
ARMODE_CONT: int
ARMODE_FIXHOLD: int
ARMODE_INST: int
ARMODE_OFF: int
ARMODE_PPPAR: int
ARMODE_PPPAR_ILS: int
ARMODE_TCAR: int
ARMODE_WLNL: int
AS2R: float
AU: float
CLIGHT: float
CODE_L1A: int
CODE_L1B: int
CODE_L1C: int
CODE_L1E: int
CODE_L1I: int
CODE_L1L: int
CODE_L1M: int
CODE_L1N: int
CODE_L1P: int
CODE_L1Q: int
CODE_L1S: int
CODE_L1W: int
CODE_L1X: int
CODE_L1Y: int
CODE_L1Z: int
CODE_L2C: int
CODE_L2D: int
CODE_L2I: int
CODE_L2L: int
CODE_L2M: int
CODE_L2N: int
CODE_L2P: int
CODE_L2Q: int
CODE_L2S: int
CODE_L2W: int
CODE_L2X: int
CODE_L2Y: int
CODE_L3I: int
CODE_L3Q: int
CODE_L3X: int
CODE_L5I: int
CODE_L5Q: int
CODE_L5X: int
CODE_L6A: int
CODE_L6B: int
CODE_L6C: int
CODE_L6I: int
CODE_L6L: int
CODE_L6Q: int
CODE_L6S: int
CODE_L6X: int
CODE_L6Z: int
CODE_L7I: int
CODE_L7Q: int
CODE_L7X: int
CODE_L8I: int
CODE_L8Q: int
CODE_L8X: int
CODE_NONE: int
D2R: float
DFRQ1_GLO: float
DFRQ2_GLO: float
DLOPT_FORCE: int
DLOPT_HOLDERR: int
DLOPT_HOLDLST: int
DLOPT_KEEPCMP: int
DTTOL: float
EFACT_CMP: float
EFACT_GAL: float
EFACT_GLO: float
EFACT_GPS: float
EFACT_QZS: float
EFACT_SBS: float
EPHOPT_BRDC: int
EPHOPT_LEX: int
EPHOPT_PREC: int
EPHOPT_SBAS: int
EPHOPT_SSRAPC: int
EPHOPT_SSRCOM: int
FE_WGS84: float
FREQ1: float
FREQ1_CMP: float
FREQ1_GLO: float
FREQ2: float
FREQ2_CMP: float
FREQ2_GLO: float
FREQ3_CMP: float
FREQ3_GLO: float
FREQ5: float
FREQ6: float
FREQ7: float
FREQ8: float
FREQTYPE_ALL: int
FREQTYPE_L1: int
FREQTYPE_L2: int
FREQTYPE_L5: int
FREQTYPE_L6: int
FREQTYPE_L7: int
FREQTYPE_L8: int
GEOID_EGM2008_M10: int
GEOID_EGM2008_M25: int
GEOID_EGM96_M150: int
GEOID_EMBEDDED: int
GEOID_GSI2000_M15: int
GEOID_RAF09: int
HION: float
INT_SWAP_STAT: float
INT_SWAP_TRAC: float
IONOOPT_BRDC: int
IONOOPT_EST: int
IONOOPT_IFLC: int
IONOOPT_LEX: int
IONOOPT_OFF: int
IONOOPT_QZS: int
IONOOPT_SBAS: int
IONOOPT_STEC: int
IONOOPT_TEC: int
LLI_BOCTRK: int
LLI_HALFA: int
LLI_HALFC: int
LLI_HALFS: int
LLI_SLIP: int
MAXANT: int
MAXBAND: int
MAXCODE: int
MAXCOMMENT: int
MAXDTOE: float
MAXDTOE_CMP: float
MAXDTOE_GAL: float
MAXDTOE_GLO: float
MAXDTOE_QZS: float
MAXDTOE_S: float
MAXDTOE_SBS: float
MAXERRMSG: int
MAXEXFILE: int
MAXFREQ: int
MAXGDOP: float
MAXLEAPS: int
MAXNGEO: int
MAXNIGP: int
MAXNRPOS: int
MAXOBS: int
MAXOBSBUF: int
MAXOBSTYPE: int
MAXPRNCMP: int
MAXPRNGAL: int
MAXPRNGLO: int
MAXPRNGPS: int
MAXPRNLEO: int
MAXPRNQZS: int
MAXPRNQZS_S: int
MAXPRNSBS: int
MAXRAWLEN: int
MAXRCV: int
MAXRCVFMT: int
MAXSAT: int
MAXSBSAGEF: float
MAXSBSAGEL: float
MAXSBSMSG: int
MAXSBSURA: int
MAXSOLBUF: int
MAXSOLMSG: int
MAXSOLQ: int
MAXSTRMSG: int
MAXSTRPATH: int
MAXSTRRTK: int
MINPRNCMP: int
MINPRNGAL: int
MINPRNGLO: int
MINPRNGPS: int
MINPRNLEO: int
MINPRNQZS: int
MINPRNQZS_S: int
MINPRNSBS: int
NEXOBS: int
NFREQ: int
NFREQGLO: int
NSATCMP: int
NSATGAL: int
NSATGLO: int
NSATGPS: int
NSATLEO: int
NSATQZS: int
NSATSBS: int
NSYS: int
NSYSCMP: int
NSYSGAL: int
NSYSGLO: int
NSYSGPS: int
NSYSLEO: int
NSYSQZS: int
NULL: int
OBSTYPE_ALL: int
OBSTYPE_CP: int
OBSTYPE_DOP: int
OBSTYPE_PR: int
OBSTYPE_SNR: int
OMGE: float
P2_11: float
P2_15: float
P2_17: float
P2_19: float
P2_20: float
P2_21: float
P2_23: float
P2_24: float
P2_27: float
P2_29: float
P2_30: float
P2_31: float
P2_32: float
P2_33: float
P2_35: float
P2_38: float
P2_39: float
P2_40: float
P2_43: float
P2_48: float
P2_5: float
P2_50: float
P2_55: float
P2_6: float
PI: float
PMODE_DGPS: int
PMODE_FIXED: int
PMODE_KINEMA: int
PMODE_MOVEB: int
PMODE_PPP_FIXED: int
PMODE_PPP_KINEMA: int
PMODE_PPP_STATIC: int
PMODE_SINGLE: int
PMODE_STATIC: int
R2D: float
RE_WGS84: float
RNX2VER: float
RNX3VER: float
SBSOPT_FCORR: int
SBSOPT_ICORR: int
SBSOPT_LCORR: int
SBSOPT_RANGE: int
SC2RAD: float
SOLF_ENU: int
SOLF_GSIF: int
SOLF_LLH: int
SOLF_NMEA: int
SOLF_XYZ: int
SOLQ_DGPS: int
SOLQ_DR: int
SOLQ_FIX: int
SOLQ_FLOAT: int
SOLQ_NONE: int
SOLQ_PPP: int
SOLQ_SBAS: int
SOLQ_SINGLE: int
STRFMT_BINEX: int
STRFMT_CRES: int
STRFMT_GW10: int
STRFMT_JAVAD: int
STRFMT_LEXR: int
STRFMT_NMEA: int
STRFMT_NVS: int
STRFMT_OEM3: int
STRFMT_OEM4: int
STRFMT_RINEX: int
STRFMT_RNXCLK: int
STRFMT_RT17: int
STRFMT_RTCM2: int
STRFMT_RTCM3: int
STRFMT_SBAS: int
STRFMT_SEPT: int
STRFMT_SP3: int
STRFMT_SS2: int
STRFMT_STQ: int
STRFMT_UBX: int
STR_FILE: int
STR_FTP: int
STR_HTTP: int
STR_MODE_R: int
STR_MODE_RW: int
STR_MODE_W: int
STR_NONE: int
STR_NTRIPCLI: int
STR_NTRIPSVR: int
STR_SERIAL: int
STR_TCPCLI: int
STR_TCPSVR: int
STR_UDP: int
SYS_ALL: int
SYS_CMP: int
SYS_GAL: int
SYS_GLO: int
SYS_GPS: int
SYS_IRN: int
SYS_LEO: int
SYS_NONE: int
SYS_QZS: int
SYS_SBS: int
TIMES_GPST: int
TIMES_JST: int
TIMES_UTC: int
TROPOPT_COR: int
TROPOPT_CORG: int
TROPOPT_EST: int
TROPOPT_ESTG: int
TROPOPT_OFF: int
TROPOPT_SAAS: int
TROPOPT_SBAS: int
TSYS_CMP: int
TSYS_GAL: int
TSYS_GLO: int
TSYS_GPS: int
TSYS_QZS: int
TSYS_UTC: int
chisqr: Arr1Ddouble
formatstrs: Arr2Dchar
igpband1: Arr2Dsbsigpband_t
igpband2: Arr2Dsbsigpband_t
lam_carr: Arr1Ddouble
prcopt_default: prcopt_t
solopt_default: solopt_t
sysopts: Arr1Dopt_t

class Arr1Dalm_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: alm_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dalm_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dalm_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dalm_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> alm_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dalm_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: alm_t) -> None: ...
    @property
    def ptr(self) -> alm_t: ...

class Arr1Dambc_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: ambc_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dambc_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dambc_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dambc_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> ambc_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dambc_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: ambc_t) -> None: ...
    @property
    def ptr(self) -> ambc_t: ...

class Arr1Dchar:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: str, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dchar: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dchar: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dchar) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> str: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dchar: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: str) -> None: ...
    @property
    def ptr(self) -> str: ...

class Arr1Ddgps_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: dgps_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Ddgps_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Ddgps_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Ddgps_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> dgps_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Ddgps_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: dgps_t) -> None: ...
    @property
    def ptr(self) -> dgps_t: ...

class Arr1Ddouble:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Ddouble: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Ddouble: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Ddouble) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> float: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Ddouble: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: float) -> None: ...
    @property
    def ptr(self) -> float: ...

class Arr1Deph_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: eph_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Deph_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Deph_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Deph_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> eph_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Deph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: eph_t) -> None: ...
    @property
    def ptr(self) -> eph_t: ...

class Arr1Derp_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: erp_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Derp_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Derp_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Derp_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> erp_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Derp_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: erp_t) -> None: ...
    @property
    def ptr(self) -> erp_t: ...

class Arr1Derpd_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: erpd_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Derpd_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Derpd_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Derpd_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> erpd_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Derpd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: erpd_t) -> None: ...
    @property
    def ptr(self) -> erpd_t: ...

class Arr1Dexterr_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: exterr_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dexterr_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dexterr_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dexterr_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> exterr_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dexterr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: exterr_t) -> None: ...
    @property
    def ptr(self) -> exterr_t: ...

class Arr1Dfilopt_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: filopt_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dfilopt_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dfilopt_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dfilopt_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> filopt_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dfilopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: filopt_t) -> None: ...
    @property
    def ptr(self) -> filopt_t: ...

class Arr1Dfloat:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dfloat: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dfloat: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dfloat) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> float: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dfloat: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: float) -> None: ...
    @property
    def ptr(self) -> float: ...

class Arr1Dgeph_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: geph_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dgeph_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dgeph_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dgeph_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> geph_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dgeph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: geph_t) -> None: ...
    @property
    def ptr(self) -> geph_t: ...

class Arr1Dgtime_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: gtime_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dgtime_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dgtime_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dgtime_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> gtime_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dgtime_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: gtime_t) -> None: ...
    @property
    def ptr(self) -> gtime_t: ...

class Arr1Dint:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dint: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dint: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dint) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> int: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dint: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr1Dlex_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: lex_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dlex_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dlex_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dlex_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> lex_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dlex_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: lex_t) -> None: ...
    @property
    def ptr(self) -> lex_t: ...

class Arr1Dlexeph_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: lexeph_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dlexeph_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dlexeph_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dlexeph_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> lexeph_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dlexeph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: lexeph_t) -> None: ...
    @property
    def ptr(self) -> lexeph_t: ...

class Arr1Dlexion_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: lexion_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dlexion_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dlexion_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dlexion_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> lexion_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dlexion_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: lexion_t) -> None: ...
    @property
    def ptr(self) -> lexion_t: ...

class Arr1Dlexmsg_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: lexmsg_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dlexmsg_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dlexmsg_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dlexmsg_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> lexmsg_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dlexmsg_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: lexmsg_t) -> None: ...
    @property
    def ptr(self) -> lexmsg_t: ...

class Arr1Dlong:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dlong: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dlong: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dlong) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> int: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dlong: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr1Dlong double:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dlongdouble: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dlongdouble: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dlongdouble) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> float: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dlongdouble: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: float) -> None: ...
    @property
    def ptr(self) -> float: ...

class Arr1Dnav_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: nav_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dnav_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dnav_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dnav_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> nav_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dnav_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: nav_t) -> None: ...
    @property
    def ptr(self) -> nav_t: ...

class Arr1Dobs_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: obs_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dobs_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dobs_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dobs_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> obs_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dobs_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: obs_t) -> None: ...
    @property
    def ptr(self) -> obs_t: ...

class Arr1Dobsd_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: obsd_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dobsd_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dobsd_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dobsd_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> obsd_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dobsd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: obsd_t) -> None: ...
    @property
    def ptr(self) -> obsd_t: ...

class Arr1Dopt_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: opt_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dopt_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dopt_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dopt_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> opt_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: opt_t) -> None: ...
    @property
    def ptr(self) -> opt_t: ...

class Arr1Dpclk_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: pclk_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dpclk_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dpclk_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dpclk_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> pclk_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dpclk_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: pclk_t) -> None: ...
    @property
    def ptr(self) -> pclk_t: ...

class Arr1Dpcv_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: pcv_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dpcv_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dpcv_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dpcv_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> pcv_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dpcv_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: pcv_t) -> None: ...
    @property
    def ptr(self) -> pcv_t: ...

class Arr1Dpcvs_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: pcvs_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dpcvs_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dpcvs_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dpcvs_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> pcvs_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dpcvs_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: pcvs_t) -> None: ...
    @property
    def ptr(self) -> pcvs_t: ...

class Arr1Dpeph_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: peph_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dpeph_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dpeph_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dpeph_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> peph_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dpeph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: peph_t) -> None: ...
    @property
    def ptr(self) -> peph_t: ...

class Arr1Dprcopt_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: prcopt_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dprcopt_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dprcopt_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dprcopt_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> prcopt_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dprcopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: prcopt_t) -> None: ...
    @property
    def ptr(self) -> prcopt_t: ...

class Arr1Draw_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: raw_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Draw_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Draw_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Draw_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> raw_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Draw_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: raw_t) -> None: ...
    @property
    def ptr(self) -> raw_t: ...

class Arr1Drnxctr_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: rnxctr_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Drnxctr_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Drnxctr_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Drnxctr_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> rnxctr_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Drnxctr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: rnxctr_t) -> None: ...
    @property
    def ptr(self) -> rnxctr_t: ...

class Arr1Drnxopt_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: rnxopt_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Drnxopt_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Drnxopt_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Drnxopt_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> rnxopt_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Drnxopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: rnxopt_t) -> None: ...
    @property
    def ptr(self) -> rnxopt_t: ...

class Arr1Drtcm_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: rtcm_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Drtcm_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Drtcm_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Drtcm_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> rtcm_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Drtcm_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: rtcm_t) -> None: ...
    @property
    def ptr(self) -> rtcm_t: ...

class Arr1Drtk_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: rtk_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Drtk_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Drtk_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Drtk_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> rtk_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Drtk_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: rtk_t) -> None: ...
    @property
    def ptr(self) -> rtk_t: ...

class Arr1Drtksvr_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: rtksvr_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Drtksvr_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Drtksvr_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Drtksvr_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> rtksvr_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Drtksvr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: rtksvr_t) -> None: ...
    @property
    def ptr(self) -> rtksvr_t: ...

class Arr1Dsbs_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbs_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbs_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbs_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbs_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbs_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbs_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbs_t) -> None: ...
    @property
    def ptr(self) -> sbs_t: ...

class Arr1Dsbsfcorr_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsfcorr_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbsfcorr_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbsfcorr_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbsfcorr_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbsfcorr_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbsfcorr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbsfcorr_t) -> None: ...
    @property
    def ptr(self) -> sbsfcorr_t: ...

class Arr1Dsbsigp_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsigp_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbsigp_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbsigp_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbsigp_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbsigp_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbsigp_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbsigp_t) -> None: ...
    @property
    def ptr(self) -> sbsigp_t: ...

class Arr1Dsbsigpband_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsigpband_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbsigpband_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbsigpband_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbsigpband_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbsigpband_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbsigpband_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbsigpband_t) -> None: ...
    @property
    def ptr(self) -> sbsigpband_t: ...

class Arr1Dsbsion_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsion_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbsion_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbsion_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbsion_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbsion_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbsion_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbsion_t) -> None: ...
    @property
    def ptr(self) -> sbsion_t: ...

class Arr1Dsbslcorr_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbslcorr_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbslcorr_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbslcorr_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbslcorr_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbslcorr_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbslcorr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbslcorr_t) -> None: ...
    @property
    def ptr(self) -> sbslcorr_t: ...

class Arr1Dsbsmsg_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsmsg_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbsmsg_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbsmsg_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbsmsg_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbsmsg_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbsmsg_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbsmsg_t) -> None: ...
    @property
    def ptr(self) -> sbsmsg_t: ...

class Arr1Dsbssat_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbssat_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbssat_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbssat_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbssat_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbssat_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbssat_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbssat_t) -> None: ...
    @property
    def ptr(self) -> sbssat_t: ...

class Arr1Dsbssatp_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sbssatp_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsbssatp_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsbssatp_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsbssatp_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sbssatp_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsbssatp_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sbssatp_t) -> None: ...
    @property
    def ptr(self) -> sbssatp_t: ...

class Arr1Dseph_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: seph_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dseph_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dseph_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dseph_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> seph_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dseph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: seph_t) -> None: ...
    @property
    def ptr(self) -> seph_t: ...

class Arr1Dshort:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dshort: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dshort: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dshort) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> int: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dshort: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr1Dsnrmask_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: snrmask_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsnrmask_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsnrmask_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsnrmask_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> snrmask_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsnrmask_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: snrmask_t) -> None: ...
    @property
    def ptr(self) -> snrmask_t: ...

class Arr1Dsol_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sol_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsol_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsol_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsol_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sol_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsol_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sol_t) -> None: ...
    @property
    def ptr(self) -> sol_t: ...

class Arr1Dsolbuf_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: solbuf_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsolbuf_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsolbuf_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsolbuf_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> solbuf_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsolbuf_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: solbuf_t) -> None: ...
    @property
    def ptr(self) -> solbuf_t: ...

class Arr1Dsolopt_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: solopt_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsolopt_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsolopt_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsolopt_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> solopt_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsolopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: solopt_t) -> None: ...
    @property
    def ptr(self) -> solopt_t: ...

class Arr1Dsolstat_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: solstat_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsolstat_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsolstat_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsolstat_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> solstat_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsolstat_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: solstat_t) -> None: ...
    @property
    def ptr(self) -> solstat_t: ...

class Arr1Dsolstatbuf_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: solstatbuf_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsolstatbuf_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsolstatbuf_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsolstatbuf_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> solstatbuf_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsolstatbuf_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: solstatbuf_t) -> None: ...
    @property
    def ptr(self) -> solstatbuf_t: ...

class Arr1Dssat_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: ssat_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dssat_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dssat_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dssat_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> ssat_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dssat_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: ssat_t) -> None: ...
    @property
    def ptr(self) -> ssat_t: ...

class Arr1Dssr_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: ssr_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dssr_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dssr_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dssr_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> ssr_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dssr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: ssr_t) -> None: ...
    @property
    def ptr(self) -> ssr_t: ...

class Arr1Dsta_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: sta_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dsta_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dsta_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dsta_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> sta_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dsta_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: sta_t) -> None: ...
    @property
    def ptr(self) -> sta_t: ...

class Arr1Dstec_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: stec_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dstec_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dstec_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dstec_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> stec_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dstec_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: stec_t) -> None: ...
    @property
    def ptr(self) -> stec_t: ...

class Arr1Dstecd_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: stecd_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dstecd_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dstecd_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dstecd_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> stecd_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dstecd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: stecd_t) -> None: ...
    @property
    def ptr(self) -> stecd_t: ...

class Arr1Dstrconv_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: strconv_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dstrconv_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dstrconv_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dstrconv_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> strconv_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dstrconv_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: strconv_t) -> None: ...
    @property
    def ptr(self) -> strconv_t: ...

class Arr1Dstream_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: stream_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dstream_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dstream_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dstream_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> stream_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dstream_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: stream_t) -> None: ...
    @property
    def ptr(self) -> stream_t: ...

class Arr1Dstrsvr_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: strsvr_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dstrsvr_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dstrsvr_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dstrsvr_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> strsvr_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dstrsvr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: strsvr_t) -> None: ...
    @property
    def ptr(self) -> strsvr_t: ...

class Arr1Dtec_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: tec_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dtec_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dtec_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dtec_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> tec_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dtec_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: tec_t) -> None: ...
    @property
    def ptr(self) -> tec_t: ...

class Arr1Dtle_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: tle_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dtle_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dtle_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dtle_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> tle_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dtle_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: tle_t) -> None: ...
    @property
    def ptr(self) -> tle_t: ...

class Arr1Dtled_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: tled_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dtled_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dtled_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dtled_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> tled_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dtled_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: tled_t) -> None: ...
    @property
    def ptr(self) -> tled_t: ...

class Arr1Dunsigned char:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dunsignedchar: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dunsignedchar: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dunsignedchar) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> int: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dunsignedchar: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr1Dunsigned int:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dunsignedint: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dunsignedint: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dunsignedint) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> int: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dunsignedint: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr1Dunsigned long:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dunsignedlong: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dunsignedlong: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dunsignedlong) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> int: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dunsignedlong: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr1Dunsigned short:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dunsignedshort: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dunsignedshort: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dunsignedshort) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> int: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dunsignedshort: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr1Durl_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: url_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Durl_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Durl_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Durl_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> url_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Durl_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: url_t) -> None: ...
    @property
    def ptr(self) -> url_t: ...

class Arr1Dzwd_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: zwd_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dzwd_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dzwd_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dzwd_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> zwd_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dzwd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: zwd_t) -> None: ...
    @property
    def ptr(self) -> zwd_t: ...

class Arr1Dzwdd_t:
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(self, arg0: zwdd_t, arg1: int) -> None: ...
    @overload
    def deepcopy(self) -> Arr1Dzwdd_t: ...
    @overload
    def deepcopy(self, arg0: int) -> Arr1Dzwdd_t: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr1Dzwdd_t) -> None: ...
    @overload
    def __getitem__(self, arg0: int) -> zwdd_t: ...
    @overload
    def __getitem__(self, arg0: slice) -> Arr1Dzwdd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __setitem__(self, arg0: int, arg1: zwdd_t) -> None: ...
    @property
    def ptr(self) -> zwdd_t: ...

class Arr2Dalm_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: alm_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dalm_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> alm_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: alm_t) -> None: ...
    @property
    def ptr(self) -> alm_t: ...

class Arr2Dambc_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: ambc_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dambc_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> ambc_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: ambc_t) -> None: ...
    @property
    def ptr(self) -> ambc_t: ...

class Arr2Dchar:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: str, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dchar) -> None: ...
    def __getitem__(self, arg0: tuple) -> str: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: str) -> None: ...
    @property
    def ptr(self) -> str: ...

class Arr2Ddgps_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: dgps_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Ddgps_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> dgps_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: dgps_t) -> None: ...
    @property
    def ptr(self) -> dgps_t: ...

class Arr2Ddouble:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Ddouble) -> None: ...
    def __getitem__(self, arg0: tuple) -> float: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: float) -> None: ...
    @property
    def ptr(self) -> float: ...

class Arr2Deph_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: eph_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Deph_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> eph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: eph_t) -> None: ...
    @property
    def ptr(self) -> eph_t: ...

class Arr2Derp_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: erp_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Derp_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> erp_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: erp_t) -> None: ...
    @property
    def ptr(self) -> erp_t: ...

class Arr2Derpd_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: erpd_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Derpd_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> erpd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: erpd_t) -> None: ...
    @property
    def ptr(self) -> erpd_t: ...

class Arr2Dexterr_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: exterr_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dexterr_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> exterr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: exterr_t) -> None: ...
    @property
    def ptr(self) -> exterr_t: ...

class Arr2Dfilopt_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: filopt_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dfilopt_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> filopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: filopt_t) -> None: ...
    @property
    def ptr(self) -> filopt_t: ...

class Arr2Dfloat:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dfloat) -> None: ...
    def __getitem__(self, arg0: tuple) -> float: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: float) -> None: ...
    @property
    def ptr(self) -> float: ...

class Arr2Dgeph_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: geph_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dgeph_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> geph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: geph_t) -> None: ...
    @property
    def ptr(self) -> geph_t: ...

class Arr2Dgtime_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: gtime_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dgtime_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> gtime_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: gtime_t) -> None: ...
    @property
    def ptr(self) -> gtime_t: ...

class Arr2Dint:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dint) -> None: ...
    def __getitem__(self, arg0: tuple) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr2Dlex_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: lex_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dlex_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> lex_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: lex_t) -> None: ...
    @property
    def ptr(self) -> lex_t: ...

class Arr2Dlexeph_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: lexeph_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dlexeph_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> lexeph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: lexeph_t) -> None: ...
    @property
    def ptr(self) -> lexeph_t: ...

class Arr2Dlexion_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: lexion_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dlexion_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> lexion_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: lexion_t) -> None: ...
    @property
    def ptr(self) -> lexion_t: ...

class Arr2Dlexmsg_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: lexmsg_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dlexmsg_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> lexmsg_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: lexmsg_t) -> None: ...
    @property
    def ptr(self) -> lexmsg_t: ...

class Arr2Dlong:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dlong) -> None: ...
    def __getitem__(self, arg0: tuple) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr2Dlong double:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dlongdouble) -> None: ...
    def __getitem__(self, arg0: tuple) -> float: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: float) -> None: ...
    @property
    def ptr(self) -> float: ...

class Arr2Dnav_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: nav_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dnav_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> nav_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: nav_t) -> None: ...
    @property
    def ptr(self) -> nav_t: ...

class Arr2Dobs_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: obs_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dobs_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> obs_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: obs_t) -> None: ...
    @property
    def ptr(self) -> obs_t: ...

class Arr2Dobsd_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: obsd_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dobsd_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> obsd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: obsd_t) -> None: ...
    @property
    def ptr(self) -> obsd_t: ...

class Arr2Dopt_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: opt_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dopt_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> opt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: opt_t) -> None: ...
    @property
    def ptr(self) -> opt_t: ...

class Arr2Dpclk_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: pclk_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dpclk_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> pclk_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: pclk_t) -> None: ...
    @property
    def ptr(self) -> pclk_t: ...

class Arr2Dpcv_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: pcv_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dpcv_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> pcv_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: pcv_t) -> None: ...
    @property
    def ptr(self) -> pcv_t: ...

class Arr2Dpcvs_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: pcvs_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dpcvs_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> pcvs_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: pcvs_t) -> None: ...
    @property
    def ptr(self) -> pcvs_t: ...

class Arr2Dpeph_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: peph_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dpeph_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> peph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: peph_t) -> None: ...
    @property
    def ptr(self) -> peph_t: ...

class Arr2Dprcopt_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: prcopt_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dprcopt_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> prcopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: prcopt_t) -> None: ...
    @property
    def ptr(self) -> prcopt_t: ...

class Arr2Draw_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: raw_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Draw_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> raw_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: raw_t) -> None: ...
    @property
    def ptr(self) -> raw_t: ...

class Arr2Drnxctr_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: rnxctr_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Drnxctr_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> rnxctr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: rnxctr_t) -> None: ...
    @property
    def ptr(self) -> rnxctr_t: ...

class Arr2Drnxopt_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: rnxopt_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Drnxopt_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> rnxopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: rnxopt_t) -> None: ...
    @property
    def ptr(self) -> rnxopt_t: ...

class Arr2Drtcm_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: rtcm_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Drtcm_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> rtcm_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: rtcm_t) -> None: ...
    @property
    def ptr(self) -> rtcm_t: ...

class Arr2Drtk_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: rtk_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Drtk_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> rtk_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: rtk_t) -> None: ...
    @property
    def ptr(self) -> rtk_t: ...

class Arr2Drtksvr_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: rtksvr_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Drtksvr_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> rtksvr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: rtksvr_t) -> None: ...
    @property
    def ptr(self) -> rtksvr_t: ...

class Arr2Dsbs_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbs_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbs_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbs_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbs_t) -> None: ...
    @property
    def ptr(self) -> sbs_t: ...

class Arr2Dsbsfcorr_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsfcorr_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbsfcorr_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbsfcorr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbsfcorr_t) -> None: ...
    @property
    def ptr(self) -> sbsfcorr_t: ...

class Arr2Dsbsigp_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsigp_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbsigp_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbsigp_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbsigp_t) -> None: ...
    @property
    def ptr(self) -> sbsigp_t: ...

class Arr2Dsbsigpband_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsigpband_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbsigpband_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbsigpband_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbsigpband_t) -> None: ...
    @property
    def ptr(self) -> sbsigpband_t: ...

class Arr2Dsbsion_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsion_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbsion_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbsion_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbsion_t) -> None: ...
    @property
    def ptr(self) -> sbsion_t: ...

class Arr2Dsbslcorr_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbslcorr_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbslcorr_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbslcorr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbslcorr_t) -> None: ...
    @property
    def ptr(self) -> sbslcorr_t: ...

class Arr2Dsbsmsg_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbsmsg_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbsmsg_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbsmsg_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbsmsg_t) -> None: ...
    @property
    def ptr(self) -> sbsmsg_t: ...

class Arr2Dsbssat_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbssat_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbssat_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbssat_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbssat_t) -> None: ...
    @property
    def ptr(self) -> sbssat_t: ...

class Arr2Dsbssatp_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sbssatp_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsbssatp_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sbssatp_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sbssatp_t) -> None: ...
    @property
    def ptr(self) -> sbssatp_t: ...

class Arr2Dseph_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: seph_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dseph_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> seph_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: seph_t) -> None: ...
    @property
    def ptr(self) -> seph_t: ...

class Arr2Dshort:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dshort) -> None: ...
    def __getitem__(self, arg0: tuple) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr2Dsnrmask_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: snrmask_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsnrmask_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> snrmask_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: snrmask_t) -> None: ...
    @property
    def ptr(self) -> snrmask_t: ...

class Arr2Dsol_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sol_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsol_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sol_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sol_t) -> None: ...
    @property
    def ptr(self) -> sol_t: ...

class Arr2Dsolbuf_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: solbuf_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsolbuf_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> solbuf_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: solbuf_t) -> None: ...
    @property
    def ptr(self) -> solbuf_t: ...

class Arr2Dsolopt_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: solopt_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsolopt_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> solopt_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: solopt_t) -> None: ...
    @property
    def ptr(self) -> solopt_t: ...

class Arr2Dsolstat_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: solstat_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsolstat_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> solstat_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: solstat_t) -> None: ...
    @property
    def ptr(self) -> solstat_t: ...

class Arr2Dsolstatbuf_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: solstatbuf_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsolstatbuf_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> solstatbuf_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: solstatbuf_t) -> None: ...
    @property
    def ptr(self) -> solstatbuf_t: ...

class Arr2Dssat_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: ssat_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dssat_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> ssat_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: ssat_t) -> None: ...
    @property
    def ptr(self) -> ssat_t: ...

class Arr2Dssr_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: ssr_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dssr_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> ssr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: ssr_t) -> None: ...
    @property
    def ptr(self) -> ssr_t: ...

class Arr2Dsta_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: sta_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dsta_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> sta_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: sta_t) -> None: ...
    @property
    def ptr(self) -> sta_t: ...

class Arr2Dstec_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: stec_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dstec_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> stec_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: stec_t) -> None: ...
    @property
    def ptr(self) -> stec_t: ...

class Arr2Dstecd_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: stecd_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dstecd_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> stecd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: stecd_t) -> None: ...
    @property
    def ptr(self) -> stecd_t: ...

class Arr2Dstrconv_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: strconv_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dstrconv_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> strconv_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: strconv_t) -> None: ...
    @property
    def ptr(self) -> strconv_t: ...

class Arr2Dstream_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: stream_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dstream_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> stream_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: stream_t) -> None: ...
    @property
    def ptr(self) -> stream_t: ...

class Arr2Dstrsvr_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: strsvr_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dstrsvr_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> strsvr_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: strsvr_t) -> None: ...
    @property
    def ptr(self) -> strsvr_t: ...

class Arr2Dtec_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: tec_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dtec_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> tec_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: tec_t) -> None: ...
    @property
    def ptr(self) -> tec_t: ...

class Arr2Dtle_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: tle_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dtle_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> tle_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: tle_t) -> None: ...
    @property
    def ptr(self) -> tle_t: ...

class Arr2Dtled_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: tled_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dtled_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> tled_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: tled_t) -> None: ...
    @property
    def ptr(self) -> tled_t: ...

class Arr2Dunsigned char:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dunsignedchar) -> None: ...
    def __getitem__(self, arg0: tuple) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr2Dunsigned int:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dunsignedint) -> None: ...
    def __getitem__(self, arg0: tuple) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr2Dunsigned long:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dunsignedlong) -> None: ...
    def __getitem__(self, arg0: tuple) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr2Dunsigned short:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: int, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dunsignedshort) -> None: ...
    def __getitem__(self, arg0: tuple) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: int) -> None: ...
    @property
    def ptr(self) -> int: ...

class Arr2Durl_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: url_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Durl_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> url_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: url_t) -> None: ...
    @property
    def ptr(self) -> url_t: ...

class Arr2Dzwd_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: zwd_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dzwd_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> zwd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: zwd_t) -> None: ...
    @property
    def ptr(self) -> zwd_t: ...

class Arr2Dzwdd_t:
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: zwdd_t, arg1: int, arg2: int) -> None: ...
    def print(self) -> None: ...
    def set(self, arg0: Arr2Dzwdd_t) -> None: ...
    def __getitem__(self, arg0: tuple) -> zwdd_t: ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> tuple: ...
    def __setitem__(self, arg0: tuple, arg1: zwdd_t) -> None: ...
    @property
    def ptr(self) -> zwdd_t: ...

class alm_t:
    A: float
    M0: float
    OMG0: float
    OMGd: float
    e: float
    f0: float
    f1: float
    i0: float
    omg: float
    sat: int
    svconf: int
    svh: int
    toa: gtime_t
    toas: float
    week: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> alm_t: ...

class ambc_t:
    fixcnt: int
    def __init__(self) -> None: ...
    @property
    def LC(self) -> Arr1Ddouble: ...
    @property
    def LCv(self) -> Arr1Ddouble: ...
    @property
    def epoch(self) -> Arr1Dgtime_t: ...
    @property
    def flags(self) -> Arr1Dchar: ...
    @property
    def n(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> ambc_t: ...

class dgps_t:
    iod: int
    prc: float
    rrc: float
    t0: gtime_t
    udre: float
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> dgps_t: ...

class eph_t:
    A: float
    Adot: float
    M0: float
    OMG0: float
    OMGd: float
    cic: float
    cis: float
    code: int
    crc: float
    crs: float
    cuc: float
    cus: float
    deln: float
    e: float
    f0: float
    f1: float
    f2: float
    fit: float
    flag: int
    i0: float
    idot: float
    iodc: int
    iode: int
    ndot: float
    omg: float
    sat: int
    sva: int
    svh: int
    toc: gtime_t
    toe: gtime_t
    toes: float
    ttr: gtime_t
    week: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> eph_t: ...
    @property
    def tgd(self) -> Arr1Ddouble: ...

class erp_t:
    data: erpd_t
    n: int
    nmax: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> erp_t: ...

class erpd_t:
    lod: float
    mjd: float
    ut1_utc: float
    xp: float
    xpr: float
    yp: float
    ypr: float
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> erpd_t: ...

class exterr_t:
    def __init__(self) -> None: ...
    @property
    def cerr(self) -> Arr2Ddouble: ...
    @property
    def ena(self) -> Arr1Dint: ...
    @property
    def gloicb(self) -> Arr1Ddouble: ...
    @property
    def gpsglob(self) -> Arr1Ddouble: ...
    @property
    def perr(self) -> Arr2Ddouble: ...
    @property
    def ptr(self) -> exterr_t: ...

class filopt_t:
    def __init__(self) -> None: ...
    @property
    def blq(self) -> Arr1Dchar: ...
    @property
    def dcb(self) -> Arr1Dchar: ...
    @property
    def eop(self) -> Arr1Dchar: ...
    @property
    def geexe(self) -> Arr1Dchar: ...
    @property
    def geoid(self) -> Arr1Dchar: ...
    @property
    def iono(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> filopt_t: ...
    @property
    def rcvantp(self) -> Arr1Dchar: ...
    @property
    def satantp(self) -> Arr1Dchar: ...
    @property
    def solstat(self) -> Arr1Dchar: ...
    @property
    def stapos(self) -> Arr1Dchar: ...
    @property
    def tempdir(self) -> Arr1Dchar: ...
    @property
    def trace(self) -> Arr1Dchar: ...

class geph_t:
    age: int
    dtaun: float
    frq: int
    gamn: float
    iode: int
    sat: int
    sva: int
    svh: int
    taun: float
    toe: gtime_t
    tof: gtime_t
    def __init__(self) -> None: ...
    @property
    def acc(self) -> Arr1Ddouble: ...
    @property
    def pos(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> geph_t: ...
    @property
    def vel(self) -> Arr1Ddouble: ...

class gtime_t:
    sec: float
    time: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> gtime_t: ...

class lex_t:
    msgs: lexmsg_t
    n: int
    nmax: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> lex_t: ...

class lexeph_t:
    af0: float
    af1: float
    health: int
    sat: int
    tgd: float
    toe: gtime_t
    tof: gtime_t
    ura: int
    def __init__(self) -> None: ...
    @property
    def acc(self) -> Arr1Ddouble: ...
    @property
    def isc(self) -> Arr1Ddouble: ...
    @property
    def jerk(self) -> Arr1Ddouble: ...
    @property
    def pos(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> lexeph_t: ...
    @property
    def vel(self) -> Arr1Ddouble: ...

class lexion_t:
    t0: gtime_t
    tspan: float
    def __init__(self) -> None: ...
    @property
    def coef(self) -> Arr2Ddouble: ...
    @property
    def pos0(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> lexion_t: ...

class lexmsg_t:
    alert: int
    prn: int
    snr: int
    stat: int
    ttt: int
    type: int
    def __init__(self) -> None: ...
    @property
    def msg(self) -> Arr1Dunsignedchar: ...
    @property
    def ptr(self) -> lexmsg_t: ...

class nav_t:
    alm: alm_t
    eph: eph_t
    erp: erp_t
    geph: geph_t
    leaps: int
    lexion: lexion_t
    n: int
    na: int
    namax: int
    nc: int
    ncmax: int
    ne: int
    nemax: int
    ng: int
    ngmax: int
    nmax: int
    nn: int
    nnmax: int
    ns: int
    nsmax: int
    nt: int
    ntmax: int
    pclk: pclk_t
    peph: peph_t
    sbssat: sbssat_t
    seph: seph_t
    stec: stec_t
    tec: tec_t
    def __init__(self) -> None: ...
    @property
    def cbias(self) -> Arr2Ddouble: ...
    @property
    def dgps(self) -> Arr1Ddgps_t: ...
    @property
    def glo_cpbias(self) -> Arr1Ddouble: ...
    @property
    def glo_fcn(self) -> Arr1Dchar: ...
    @property
    def ion_cmp(self) -> Arr1Ddouble: ...
    @property
    def ion_gal(self) -> Arr1Ddouble: ...
    @property
    def ion_gps(self) -> Arr1Ddouble: ...
    @property
    def ion_qzs(self) -> Arr1Ddouble: ...
    @property
    def lam(self) -> Arr2Ddouble: ...
    @property
    def lexeph(self) -> Arr1Dlexeph_t: ...
    @property
    def pcvs(self) -> Arr1Dpcv_t: ...
    @property
    def ptr(self) -> nav_t: ...
    @property
    def sbsion(self) -> Arr1Dsbsion_t: ...
    @property
    def ssr(self) -> Arr1Dssr_t: ...
    @property
    def utc_cmp(self) -> Arr1Ddouble: ...
    @property
    def utc_gal(self) -> Arr1Ddouble: ...
    @property
    def utc_glo(self) -> Arr1Ddouble: ...
    @property
    def utc_gps(self) -> Arr1Ddouble: ...
    @property
    def utc_qzs(self) -> Arr1Ddouble: ...
    @property
    def utc_sbs(self) -> Arr1Ddouble: ...
    @property
    def wlbias(self) -> Arr1Ddouble: ...

class obs_t:
    n: int
    nmax: int
    def __init__(self) -> None: ...
    def set_data(self, arg0: Arr1Dobsd_t) -> None: ...
    @property
    def data(self) -> Arr1Dobsd_t: ...
    @property
    def ptr(self) -> obs_t: ...

class obsd_t:
    rcv: int
    sat: int
    time: gtime_t
    def __init__(self) -> None: ...
    @property
    def D(self) -> Arr1Dfloat: ...
    @property
    def L(self) -> Arr1Ddouble: ...
    @property
    def LLI(self) -> Arr1Dunsignedchar: ...
    @property
    def P(self) -> Arr1Ddouble: ...
    @property
    def SNR(self) -> Arr1Dunsignedchar: ...
    @property
    def code(self) -> Arr1Dunsignedchar: ...
    @property
    def ptr(self) -> obsd_t: ...

class opt_t:
    comment: str
    format: int
    name: str
    var: capsule
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> opt_t: ...

class pclk_t:
    index: int
    time: gtime_t
    def __init__(self) -> None: ...
    @property
    def clk(self) -> Arr2Ddouble: ...
    @property
    def ptr(self) -> pclk_t: ...
    @property
    def std(self) -> Arr2Dfloat: ...

class pcv_t:
    sat: int
    te: gtime_t
    ts: gtime_t
    def __init__(self) -> None: ...
    @property
    def code(self) -> Arr1Dchar: ...
    @property
    def off(self) -> Arr2Ddouble: ...
    @property
    def ptr(self) -> pcv_t: ...
    @property
    def type(self) -> Arr1Dchar: ...
    @property
    def var(self) -> Arr2Ddouble: ...

class pcvs_t:
    n: int
    nmax: int
    pcv: pcv_t
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> pcvs_t: ...

class peph_t:
    index: int
    time: gtime_t
    def __init__(self) -> None: ...
    @property
    def cov(self) -> Arr2Dfloat: ...
    @property
    def pos(self) -> Arr2Ddouble: ...
    @property
    def ptr(self) -> peph_t: ...
    @property
    def std(self) -> Arr2Dfloat: ...
    @property
    def vco(self) -> Arr2Dfloat: ...
    @property
    def vel(self) -> Arr2Ddouble: ...
    @property
    def vst(self) -> Arr2Dfloat: ...

class prcopt_t:
    bdsmodear: int
    codesmooth: int
    dynamics: int
    elmaskar: float
    elmaskhold: float
    elmin: float
    exterr: exterr_t
    glomodear: int
    intpref: int
    ionoopt: int
    maxgdop: float
    maxinno: float
    maxout: int
    maxtdiff: float
    minfix: int
    minlock: int
    mode: int
    modear: int
    navsys: int
    nf: int
    niter: int
    refpos: int
    rovpos: int
    sateph: int
    sbascorr: int
    sbassatsel: int
    sclkstab: float
    snrmask: snrmask_t
    soltype: int
    syncsol: int
    thresslip: float
    tidecorr: int
    tropopt: int
    def __init__(self) -> None: ...
    @property
    def antdel(self) -> Arr2Ddouble: ...
    @property
    def anttype(self) -> Arr2Dchar: ...
    @property
    def baseline(self) -> Arr1Ddouble: ...
    @property
    def eratio(self) -> Arr1Ddouble: ...
    @property
    def err(self) -> Arr1Ddouble: ...
    @property
    def exsats(self) -> Arr1Dunsignedchar: ...
    @property
    def odisp(self) -> Arr2Ddouble: ...
    @property
    def pcvr(self) -> Arr1Dpcv_t: ...
    @property
    def posopt(self) -> Arr1Dint: ...
    @property
    def prn(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> prcopt_t: ...
    @property
    def rb(self) -> Arr1Ddouble: ...
    @property
    def rnxopt(self) -> Arr2Dchar: ...
    @property
    def ru(self) -> Arr1Ddouble: ...
    @property
    def std(self) -> Arr1Ddouble: ...
    @property
    def thresar(self) -> Arr1Ddouble: ...

class raw_t:
    ephsat: int
    flag: int
    icpc: float
    iod: int
    len: int
    lexmsg: lexmsg_t
    nav: nav_t
    nbyte: int
    obs: obs_t
    obuf: obs_t
    outtype: int
    page: int
    pbyte: int
    plen: int
    receive_time: float
    reply: int
    sbsmsg: sbsmsg_t
    sta: sta_t
    tbase: int
    time: gtime_t
    tod: int
    week: int
    def __init__(self) -> None: ...
    @property
    def buff(self) -> Arr1Dunsignedchar: ...
    @property
    def dpCA(self) -> Arr1Ddouble: ...
    @property
    def freqn(self) -> Arr1Dchar: ...
    @property
    def halfc(self) -> Arr2Dunsignedchar: ...
    @property
    def icpp(self) -> Arr2Ddouble: ...
    @property
    def lockt(self) -> Arr2Ddouble: ...
    @property
    def msgtype(self) -> Arr1Dchar: ...
    @property
    def off(self) -> Arr1Ddouble: ...
    @property
    def opt(self) -> Arr1Dchar: ...
    @property
    def pbuff(self) -> Arr1Dunsignedchar: ...
    @property
    def prCA(self) -> Arr2Ddouble: ...
    @property
    def ptr(self) -> raw_t: ...
    @property
    def subfrm(self) -> Arr2Dunsignedchar: ...
    @property
    def tobs(self) -> Arr2Dgtime_t: ...

class rnxctr_t:
    ephsat: int
    nav: nav_t
    obs: obs_t
    sta: sta_t
    sys: int
    time: gtime_t
    tsys: int
    type: str
    ver: float
    def __init__(self) -> None: ...
    @property
    def opt(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> rnxctr_t: ...
    @property
    def tobs(self) -> Arr2Dchar: ...

class rnxopt_t:
    autopos: int
    freqtype: int
    navsys: int
    obstype: int
    outiono: int
    outleaps: int
    outtime: int
    rnxver: float
    scanobs: int
    te: gtime_t
    tend: gtime_t
    tint: float
    trtcm: gtime_t
    ts: gtime_t
    tstart: gtime_t
    tunit: float
    def __init__(self) -> None: ...
    @property
    def ant(self) -> Arr2Dchar: ...
    @property
    def antdel(self) -> Arr1Ddouble: ...
    @property
    def apppos(self) -> Arr1Ddouble: ...
    @property
    def comment(self) -> Arr2Dchar: ...
    @property
    def exsats(self) -> Arr1Dunsignedchar: ...
    @property
    def marker(self) -> Arr1Dchar: ...
    @property
    def markerno(self) -> Arr1Dchar: ...
    @property
    def markertype(self) -> Arr1Dchar: ...
    @property
    def mask(self) -> Arr2Dchar: ...
    @property
    def name(self) -> Arr2Dchar: ...
    @property
    def nobs(self) -> Arr1Dint: ...
    @property
    def prog(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> rnxopt_t: ...
    @property
    def rcvopt(self) -> Arr1Dchar: ...
    @property
    def rec(self) -> Arr2Dchar: ...
    @property
    def runby(self) -> Arr1Dchar: ...
    @property
    def staid(self) -> Arr1Dchar: ...
    @property
    def tobs(self) -> Arr2Dchar: ...

class rtcm_t:
    dgps: dgps_t
    ephsat: int
    len: int
    nav: nav_t
    nbit: int
    nbyte: int
    obs: obs_t
    obsflag: int
    outtype: int
    seqno: int
    sta: sta_t
    stah: int
    staid: int
    time: gtime_t
    time_s: gtime_t
    word: int
    def __init__(self) -> None: ...
    @property
    def buff(self) -> Arr1Dunsignedchar: ...
    @property
    def cp(self) -> Arr2Ddouble: ...
    @property
    def lltime(self) -> Arr2Dgtime_t: ...
    @property
    def lock(self) -> Arr2Dunsignedshort: ...
    @property
    def loss(self) -> Arr2Dunsignedshort: ...
    @property
    def msg(self) -> Arr1Dchar: ...
    @property
    def msgtype(self) -> Arr1Dchar: ...
    @property
    def msmtype(self) -> Arr2Dchar: ...
    @property
    def nmsg2(self) -> Arr1Dunsignedint: ...
    @property
    def nmsg3(self) -> Arr1Dunsignedint: ...
    @property
    def opt(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> rtcm_t: ...
    @property
    def ssr(self) -> Arr1Dssr_t: ...

class rtk_t:
    P: float
    Pa: float
    na: int
    neb: int
    nfix: int
    nx: int
    opt: prcopt_t
    sol: sol_t
    tt: float
    x: float
    xa: float
    def __init__(self) -> None: ...
    @property
    def ambc(self) -> Arr1Dambc_t: ...
    @property
    def errbuf(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> rtk_t: ...
    @property
    def rb(self) -> Arr1Ddouble: ...
    @property
    def ssat(self) -> Arr1Dssat_t: ...

class rtksvr_t:
    buffsize: int
    cputime: int
    cycle: int
    lock: pthread_mutex_t
    moni: stream_t
    nav: nav_t
    navsel: int
    nmeacycle: int
    nmeareq: int
    nsbs: int
    nsol: int
    prcout: int
    rtk: rtk_t
    state: int
    thread: int
    tick: int
    def __init__(self) -> None: ...
    @property
    def buff(self) -> Arr2Dunsignedchar: ...
    @property
    def files(self) -> Arr2Dchar: ...
    @property
    def format(self) -> Arr1Dint: ...
    @property
    def ftime(self) -> Arr1Dgtime_t: ...
    @property
    def nb(self) -> Arr1Dint: ...
    @property
    def nmeapos(self) -> Arr1Ddouble: ...
    @property
    def nmsg(self) -> Arr2Dunsignedint: ...
    @property
    def npb(self) -> Arr1Dint: ...
    @property
    def nsb(self) -> Arr1Dint: ...
    @property
    def obs(self) -> Arr2Dobs_t: ...
    @property
    def pbuf(self) -> Arr2Dunsignedchar: ...
    @property
    def ptr(self) -> rtksvr_t: ...
    @property
    def raw(self) -> Arr1Draw_t: ...
    @property
    def rtcm(self) -> Arr1Drtcm_t: ...
    @property
    def sbsmsg(self) -> Arr1Dsbsmsg_t: ...
    @property
    def sbuf(self) -> Arr2Dunsignedchar: ...
    @property
    def solbuf(self) -> Arr1Dsol_t: ...
    @property
    def solopt(self) -> Arr1Dsolopt_t: ...
    @property
    def stream(self) -> Arr1Dstream_t: ...

class sbs_t:
    msgs: sbsmsg_t
    n: int
    nmax: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> sbs_t: ...

class sbsfcorr_t:
    ai: int
    dt: float
    iodf: int
    prc: float
    rrc: float
    t0: gtime_t
    udre: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> sbsfcorr_t: ...

class sbsigp_t:
    delay: float
    give: int
    lat: int
    lon: int
    t0: gtime_t
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> sbsigp_t: ...

class sbsigpband_t:
    bite: int
    bits: int
    x: int
    y: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> sbsigpband_t: ...

class sbsion_t:
    iodi: int
    nigp: int
    def __init__(self) -> None: ...
    @property
    def igp(self) -> Arr1Dsbsigp_t: ...
    @property
    def ptr(self) -> sbsion_t: ...

class sbslcorr_t:
    daf0: float
    daf1: float
    iode: int
    t0: gtime_t
    def __init__(self) -> None: ...
    @property
    def dpos(self) -> Arr1Ddouble: ...
    @property
    def dvel(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> sbslcorr_t: ...

class sbsmsg_t:
    prn: int
    tow: int
    week: int
    def __init__(self) -> None: ...
    @property
    def msg(self) -> Arr1Dunsignedchar: ...
    @property
    def ptr(self) -> sbsmsg_t: ...

class sbssat_t:
    iodp: int
    nsat: int
    tlat: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> sbssat_t: ...
    @property
    def sat(self) -> Arr1Dsbssatp_t: ...

class sbssatp_t:
    fcorr: sbsfcorr_t
    lcorr: sbslcorr_t
    sat: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> sbssatp_t: ...

class seph_t:
    af0: float
    af1: float
    sat: int
    sva: int
    svh: int
    t0: gtime_t
    tof: gtime_t
    def __init__(self) -> None: ...
    @property
    def acc(self) -> Arr1Ddouble: ...
    @property
    def pos(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> seph_t: ...
    @property
    def vel(self) -> Arr1Ddouble: ...

class snrmask_t:
    def __init__(self) -> None: ...
    @property
    def ena(self) -> Arr1Dint: ...
    @property
    def mask(self) -> Arr2Ddouble: ...
    @property
    def ptr(self) -> snrmask_t: ...

class sol_t:
    age: float
    ns: int
    ratio: float
    stat: int
    time: gtime_t
    type: int
    def __init__(self) -> None: ...
    @property
    def dtr(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> sol_t: ...
    @property
    def qr(self) -> Arr1Dfloat: ...
    @property
    def rr(self) -> Arr1Ddouble: ...

class solbuf_t:
    cyclic: int
    data: sol_t
    end: int
    n: int
    nb: int
    nmax: int
    start: int
    time: gtime_t
    def __init__(self) -> None: ...
    @property
    def buff(self) -> Arr1Dunsignedchar: ...
    @property
    def ptr(self) -> solbuf_t: ...
    @property
    def rb(self) -> Arr1Ddouble: ...

class solopt_t:
    datum: int
    degf: int
    geoid: int
    height: int
    outhead: int
    outopt: int
    posf: int
    solstatic: int
    sstat: int
    timef: int
    times: int
    timeu: int
    trace: int
    def __init__(self) -> None: ...
    @property
    def nmeaintv(self) -> Arr1Ddouble: ...
    @property
    def prog(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> solopt_t: ...
    @property
    def sep(self) -> Arr1Dchar: ...

class solstat_t:
    az: float
    el: float
    flag: int
    frq: int
    lock: int
    outc: int
    rejc: int
    resc: float
    resp: float
    sat: int
    slipc: int
    snr: int
    time: gtime_t
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> solstat_t: ...

class solstatbuf_t:
    data: solstat_t
    n: int
    nmax: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> solstatbuf_t: ...

class ssat_t:
    gf: float
    gf2: float
    phw: float
    sys: int
    vs: int
    def __init__(self) -> None: ...
    @property
    def azel(self) -> Arr1Ddouble: ...
    @property
    def fix(self) -> Arr1Dunsignedchar: ...
    @property
    def lock(self) -> Arr1Dunsignedint: ...
    @property
    def outc(self) -> Arr1Dunsignedint: ...
    @property
    def ph(self) -> Arr2Ddouble: ...
    @property
    def pt(self) -> Arr2Dgtime_t: ...
    @property
    def ptr(self) -> ssat_t: ...
    @property
    def rejc(self) -> Arr1Dunsignedint: ...
    @property
    def resc(self) -> Arr1Ddouble: ...
    @property
    def resp(self) -> Arr1Ddouble: ...
    @property
    def slip(self) -> Arr1Dunsignedchar: ...
    @property
    def slipc(self) -> Arr1Dunsignedint: ...
    @property
    def snr(self) -> Arr1Dunsignedchar: ...
    @property
    def vsat(self) -> Arr1Dunsignedchar: ...

class ssr_t:
    hrclk: float
    iodcrc: int
    iode: int
    refd: int
    update: int
    ura: int
    def __init__(self) -> None: ...
    @property
    def cbias(self) -> Arr1Dfloat: ...
    @property
    def dclk(self) -> Arr1Ddouble: ...
    @property
    def ddeph(self) -> Arr1Ddouble: ...
    @property
    def deph(self) -> Arr1Ddouble: ...
    @property
    def iod(self) -> Arr1Dint: ...
    @property
    def ptr(self) -> ssr_t: ...
    @property
    def t0(self) -> Arr1Dgtime_t: ...
    @property
    def udi(self) -> Arr1Ddouble: ...

class sta_t:
    antsetup: int
    deltype: int
    hgt: float
    itrf: int
    def __init__(self) -> None: ...
    @property
    def antdes(self) -> Arr1Dchar: ...
    @property
    def antsno(self) -> Arr1Dchar: ...
    @property
    def del(self) -> Arr1Ddouble: ...
    @property
    def marker(self) -> Arr1Dchar: ...
    @property
    def name(self) -> Arr1Dchar: ...
    @property
    def pos(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> sta_t: ...
    @property
    def recsno(self) -> Arr1Dchar: ...
    @property
    def rectype(self) -> Arr1Dchar: ...
    @property
    def recver(self) -> Arr1Dchar: ...

class stec_t:
    data: stecd_t
    n: int
    nmax: int
    def __init__(self) -> None: ...
    @property
    def index(self) -> Arr1Dint: ...
    @property
    def pos(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> stec_t: ...

class stecd_t:
    iono: float
    rate: float
    rms: float
    sat: int
    slip: int
    time: gtime_t
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> stecd_t: ...

class strconv_t:
    itype: int
    nmsg: int
    otype: int
    out: rtcm_t
    raw: raw_t
    rtcm: rtcm_t
    stasel: int
    def __init__(self) -> None: ...
    @property
    def ephsat(self) -> Arr1Dint: ...
    @property
    def msgs(self) -> Arr1Dint: ...
    @property
    def ptr(self) -> strconv_t: ...
    @property
    def tick(self) -> Arr1Dunsignedint: ...
    @property
    def tint(self) -> Arr1Ddouble: ...

class stream_t:
    inb: int
    inbt: int
    inr: int
    lock: pthread_mutex_t
    mode: int
    outb: int
    outbt: int
    outr: int
    port: capsule
    state: int
    tact: int
    tick: int
    type: int
    def __init__(self) -> None: ...
    @property
    def msg(self) -> Arr1Dchar: ...
    @property
    def path(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> stream_t: ...

class strsvr_t:
    buff: int
    buffsize: int
    cycle: int
    lock: pthread_mutex_t
    nmeacycle: int
    npb: int
    nstr: int
    pbuf: int
    state: int
    thread: int
    tick: int
    def __init__(self) -> None: ...
    @property
    def conv(self) -> Arr2Dstrconv_t: ...
    @property
    def nmeapos(self) -> Arr1Ddouble: ...
    @property
    def ptr(self) -> strsvr_t: ...
    @property
    def stream(self) -> Arr1Dstream_t: ...

class tec_t:
    data: float
    rb: float
    rms: float
    time: gtime_t
    def __init__(self) -> None: ...
    @property
    def hgts(self) -> Arr1Ddouble: ...
    @property
    def lats(self) -> Arr1Ddouble: ...
    @property
    def lons(self) -> Arr1Ddouble: ...
    @property
    def ndata(self) -> Arr1Dint: ...
    @property
    def ptr(self) -> tec_t: ...

class tle_t:
    data: tled_t
    n: int
    nmax: int
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> tle_t: ...

class tled_t:
    M: float
    OMG: float
    bstar: float
    ecc: float
    eleno: int
    epoch: gtime_t
    etype: int
    inc: float
    n: float
    nddot: float
    ndot: float
    omg: float
    rev: int
    satclass: str
    def __init__(self) -> None: ...
    @property
    def alias(self) -> Arr1Dchar: ...
    @property
    def desig(self) -> Arr1Dchar: ...
    @property
    def name(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> tled_t: ...
    @property
    def satno(self) -> Arr1Dchar: ...

class url_t:
    tint: float
    def __init__(self) -> None: ...
    @property
    def dir(self) -> Arr1Dchar: ...
    @property
    def path(self) -> Arr1Dchar: ...
    @property
    def ptr(self) -> url_t: ...
    @property
    def type(self) -> Arr1Dchar: ...

class zwd_t:
    data: zwdd_t
    n: int
    nmax: int
    def __init__(self) -> None: ...
    @property
    def pos(self) -> Arr1Dfloat: ...
    @property
    def ptr(self) -> zwd_t: ...

class zwdd_t:
    rms: float
    time: gtime_t
    zwd: float
    def __init__(self) -> None: ...
    @property
    def ptr(self) -> zwdd_t: ...

def addsol(arg0: solbuf_t, arg1: sol_t) -> int: ...
def adjgpsweek(arg0: int) -> int: ...
def alm2pos(arg0: gtime_t, arg1: alm_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble) -> None: ...
def antmodel(arg0: pcv_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: int, arg4: Arr1Ddouble) -> None: ...
def antmodel_s(arg0: pcv_t, arg1: float, arg2: Arr1Ddouble) -> None: ...
def bdt2gpst(arg0: gtime_t) -> gtime_t: ...
def bdt2time(arg0: int, arg1: float) -> gtime_t: ...
def closegeoid() -> None: ...
def code2obs(arg0: int, arg1: Arr1Dint) -> str: ...
def convkml(arg0: str, arg1: str, arg2: gtime_t, arg3: gtime_t, arg4: float, arg5: int, arg6: Arr1Ddouble, arg7: int, arg8: int, arg9: int, arg10: int) -> int: ...
def convrnx(arg0: int, arg1: rnxopt_t, arg2: str, arg3: List[str]) -> int: ...
def covecef(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble) -> None: ...
def covenu(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble) -> None: ...
def createdir(arg0: str) -> None: ...
def cross3(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble) -> None: ...
def csmooth(arg0: obs_t, arg1: int) -> None: ...
def decode_bds_d1(arg0: Arr1Dunsignedchar, arg1: eph_t) -> int: ...
def decode_bds_d2(arg0: Arr1Dunsignedchar, arg1: eph_t) -> int: ...
def decode_frame(arg0: Arr1Dunsignedchar, arg1: eph_t, arg2: alm_t, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: Arr1Dint) -> int: ...
def decode_gal_inav(arg0: Arr1Dunsignedchar, arg1: eph_t) -> int: ...
def decode_glostr(arg0: Arr1Dunsignedchar, arg1: geph_t) -> int: ...
def decode_word(arg0: int, arg1: Arr1Dunsignedchar) -> int: ...
def deg2dms(arg0: float, arg1: Arr1Ddouble) -> None: ...
def dl_exec(arg0: gtime_t, arg1: gtime_t, arg2: float, arg3: int, arg4: int, arg5: url_t, arg6: int, arg7: List[str], arg8: int, arg9: str, arg10: str, arg11: str, arg12: str, arg13: int, arg14: Arr1Dchar, arg15: _IO_FILE) -> int: ...
def dl_readstas(arg0: str, arg1: List[str], arg2: int) -> int: ...
def dl_readurls(arg0: str, arg1: List[str], arg2: int, arg3: url_t, arg4: int) -> int: ...
def dl_test(arg0: gtime_t, arg1: gtime_t, arg2: float, arg3: url_t, arg4: int, arg5: List[str], arg6: int, arg7: str, arg8: int, arg9: int, arg10: _IO_FILE) -> None: ...
def dms2deg(arg0: Arr1Ddouble) -> float: ...
def dops(arg0: int, arg1: Arr1Ddouble, arg2: float, arg3: Arr1Ddouble) -> None: ...
def dot(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: int) -> float: ...
def ecef2enu(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble) -> None: ...
def ecef2pos(arg0: Arr1Ddouble, arg1: Arr1Ddouble) -> None: ...
def eci2ecef(arg0: gtime_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble) -> None: ...
def enu2ecef(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble) -> None: ...
def eph2clk(arg0: gtime_t, arg1: eph_t) -> float: ...
def eph2pos(arg0: gtime_t, arg1: eph_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble) -> None: ...
def epoch2time(arg0: Arr1Ddouble) -> gtime_t: ...
def execcmd(arg0: str) -> int: ...
def expath(arg0: str, arg1: List[str], arg2: int) -> int: ...
def eye(arg0: int) -> float: ...
def filter(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: int, arg6: int) -> int: ...
def free_raw(arg0: raw_t) -> None: ...
def free_rnxctr(arg0: rnxctr_t) -> None: ...
def free_rtcm(arg0: rtcm_t) -> None: ...
def freenav(arg0: nav_t, arg1: int) -> None: ...
def freeobs(arg0: obs_t) -> None: ...
def freesolbuf(arg0: solbuf_t) -> None: ...
def freesolstatbuf(arg0: solstatbuf_t) -> None: ...
def gen_lexr(arg0: str, arg1: Arr1Dunsignedchar) -> int: ...
def gen_nvs(arg0: str, arg1: Arr1Dunsignedchar) -> int: ...
def gen_rtcm2(arg0: rtcm_t, arg1: int, arg2: int) -> int: ...
def gen_rtcm3(arg0: rtcm_t, arg1: int, arg2: int) -> int: ...
def gen_stq(arg0: str, arg1: Arr1Dunsignedchar) -> int: ...
def gen_ubx(arg0: str, arg1: Arr1Dunsignedchar) -> int: ...
def geodist(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble) -> float: ...
def geoidh(arg0: Arr1Ddouble) -> float: ...
def geph2clk(arg0: gtime_t, arg1: geph_t) -> float: ...
def geph2pos(arg0: gtime_t, arg1: geph_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble) -> None: ...
def getbits(arg0: Arr1Dunsignedchar, arg1: int, arg2: int) -> int: ...
def getbitu(arg0: Arr1Dunsignedchar, arg1: int, arg2: int) -> int: ...
def getcodepri(arg0: int, arg1: int, arg2: str) -> int: ...
def geterp(arg0: erp_t, arg1: gtime_t, arg2: Arr1Ddouble) -> int: ...
def getsol(arg0: solbuf_t, arg1: int) -> sol_t: ...
def getsysopts(arg0: prcopt_t, arg1: solopt_t, arg2: filopt_t) -> None: ...
def gpst2bdt(arg0: gtime_t) -> gtime_t: ...
def gpst2time(arg0: int, arg1: float) -> gtime_t: ...
def gpst2utc(arg0: gtime_t) -> gtime_t: ...
def gst2time(arg0: int, arg1: float) -> gtime_t: ...
def imat(arg0: int, arg1: int) -> int: ...
def init_raw(arg0: raw_t) -> int: ...
def init_rnxctr(arg0: rnxctr_t) -> int: ...
def init_rtcm(arg0: rtcm_t) -> int: ...
def initsolbuf(arg0: solbuf_t, arg1: int, arg2: int) -> None: ...
def input_bnx(arg0: raw_t, arg1: int) -> int: ...
def input_bnxf(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_cres(arg0: raw_t, arg1: int) -> int: ...
def input_cresf(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_gw10(arg0: raw_t, arg1: int) -> int: ...
def input_gw10f(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_javad(arg0: raw_t, arg1: int) -> int: ...
def input_javadf(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_lexr(arg0: raw_t, arg1: int) -> int: ...
def input_lexrf(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_nvs(arg0: raw_t, arg1: int) -> int: ...
def input_nvsf(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_oem3(arg0: raw_t, arg1: int) -> int: ...
def input_oem3f(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_oem4(arg0: raw_t, arg1: int) -> int: ...
def input_oem4f(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_raw(arg0: raw_t, arg1: int, arg2: int) -> int: ...
def input_rawf(arg0: raw_t, arg1: int, arg2: _IO_FILE) -> int: ...
def input_rnxctr(arg0: rnxctr_t, arg1: _IO_FILE) -> int: ...
def input_rt17(arg0: raw_t, arg1: int) -> int: ...
def input_rt17f(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_rtcm2(arg0: rtcm_t, arg1: int) -> int: ...
def input_rtcm2f(arg0: rtcm_t, arg1: _IO_FILE) -> int: ...
def input_rtcm3(arg0: rtcm_t, arg1: int) -> int: ...
def input_rtcm3f(arg0: rtcm_t, arg1: _IO_FILE) -> int: ...
def input_ss2(arg0: raw_t, arg1: int) -> int: ...
def input_ss2f(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_stq(arg0: raw_t, arg1: int) -> int: ...
def input_stqf(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def input_ubx(arg0: raw_t, arg1: int) -> int: ...
def input_ubxf(arg0: raw_t, arg1: _IO_FILE) -> int: ...
def inputsol(arg0: int, arg1: gtime_t, arg2: gtime_t, arg3: float, arg4: int, arg5: solopt_t, arg6: solbuf_t) -> int: ...
def ionmapf(arg0: Arr1Ddouble, arg1: Arr1Ddouble) -> float: ...
def ionmodel(arg0: gtime_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble) -> float: ...
def ionocorr(arg0: gtime_t, arg1: nav_t, arg2: int, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: int, arg6: Arr1Ddouble, arg7: Arr1Ddouble) -> int: ...
def ionppp(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: float, arg3: float, arg4: Arr1Ddouble) -> float: ...
def iontec(arg0: gtime_t, arg1: nav_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: int, arg5: Arr1Ddouble, arg6: Arr1Ddouble) -> int: ...
def jgd2tokyo(arg0: Arr1Ddouble) -> int: ...
def lambda(arg0: int, arg1: int, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: Arr1Ddouble) -> int: ...
def lexconvbin(arg0: int, arg1: int, arg2: str, arg3: str) -> int: ...
def lexeph2pos(arg0: gtime_t, arg1: int, arg2: nav_t, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: Arr1Ddouble) -> int: ...
def lexioncorr(arg0: gtime_t, arg1: nav_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: Arr1Ddouble) -> int: ...
def lexoutmsg(arg0: _IO_FILE, arg1: lexmsg_t) -> None: ...
def lexreadmsg(arg0: str, arg1: int, arg2: lex_t) -> int: ...
def lexupdatecorr(arg0: lexmsg_t, arg1: nav_t, arg2: gtime_t) -> int: ...
def loaddatump(arg0: str) -> int: ...
def loadopts(arg0: str, arg1: opt_t) -> int: ...
def lsq(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: int, arg3: int, arg4: Arr1Ddouble, arg5: Arr1Ddouble) -> int: ...
def mat(arg0: int, arg1: int) -> float: ...
def matcpy(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: int, arg3: int) -> None: ...
def matfprint(arg0: Arr1Ddouble, arg1: int, arg2: int, arg3: int, arg4: int, arg5: _IO_FILE) -> None: ...
def matinv(arg0: Arr1Ddouble, arg1: int) -> int: ...
def matmul(arg0: str, arg1: int, arg2: int, arg3: int, arg4: float, arg5: Arr1Ddouble, arg6: Arr1Ddouble, arg7: float, arg8: Arr1Ddouble) -> None: ...
def matprint(arg0: Arr1Ddouble, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...
def norm(arg0: Arr1Ddouble, arg1: int) -> float: ...
def normv3(arg0: Arr1Ddouble, arg1: Arr1Ddouble) -> int: ...
def obs2code(arg0: str, arg1: Arr1Dint) -> int: ...
def open_rnxctr(arg0: rnxctr_t, arg1: _IO_FILE) -> int: ...
def opengeoid(arg0: int, arg1: str) -> int: ...
def opt2buf(arg0: opt_t, arg1: Arr1Dchar) -> int: ...
def opt2str(arg0: opt_t, arg1: Arr1Dchar) -> int: ...
def outnmea_gga(arg0: Arr1Dunsignedchar, arg1: sol_t) -> int: ...
def outnmea_gsa(arg0: Arr1Dunsignedchar, arg1: sol_t, arg2: ssat_t) -> int: ...
def outnmea_gsv(arg0: Arr1Dunsignedchar, arg1: sol_t, arg2: ssat_t) -> int: ...
def outnmea_rmc(arg0: Arr1Dunsignedchar, arg1: sol_t) -> int: ...
def outprcopt(arg0: _IO_FILE, arg1: prcopt_t) -> None: ...
def outprcopts(arg0: Arr1Dunsignedchar, arg1: prcopt_t) -> int: ...
def outrnxcnavh(arg0: _IO_FILE, arg1: rnxopt_t, arg2: nav_t) -> int: ...
def outrnxgnavb(arg0: _IO_FILE, arg1: rnxopt_t, arg2: geph_t) -> int: ...
def outrnxgnavh(arg0: _IO_FILE, arg1: rnxopt_t, arg2: nav_t) -> int: ...
def outrnxhnavb(arg0: _IO_FILE, arg1: rnxopt_t, arg2: seph_t) -> int: ...
def outrnxhnavh(arg0: _IO_FILE, arg1: rnxopt_t, arg2: nav_t) -> int: ...
def outrnxlnavh(arg0: _IO_FILE, arg1: rnxopt_t, arg2: nav_t) -> int: ...
def outrnxnavb(arg0: _IO_FILE, arg1: rnxopt_t, arg2: eph_t) -> int: ...
def outrnxnavh(arg0: _IO_FILE, arg1: rnxopt_t, arg2: nav_t) -> int: ...
def outrnxobsb(arg0: _IO_FILE, arg1: rnxopt_t, arg2: obsd_t, arg3: int, arg4: int) -> int: ...
def outrnxobsh(arg0: _IO_FILE, arg1: rnxopt_t, arg2: nav_t) -> int: ...
def outrnxqnavh(arg0: _IO_FILE, arg1: rnxopt_t, arg2: nav_t) -> int: ...
def outsol(arg0: _IO_FILE, arg1: sol_t, arg2: Arr1Ddouble, arg3: solopt_t) -> None: ...
def outsolex(arg0: _IO_FILE, arg1: sol_t, arg2: ssat_t, arg3: solopt_t) -> None: ...
def outsolexs(arg0: Arr1Dunsignedchar, arg1: sol_t, arg2: ssat_t, arg3: solopt_t) -> int: ...
def outsolhead(arg0: _IO_FILE, arg1: solopt_t) -> None: ...
def outsolheads(arg0: Arr1Dunsignedchar, arg1: solopt_t) -> int: ...
def outsols(arg0: Arr1Dunsignedchar, arg1: sol_t, arg2: Arr1Ddouble, arg3: solopt_t) -> int: ...
def peph2pos(arg0: gtime_t, arg1: int, arg2: nav_t, arg3: int, arg4: Arr1Ddouble, arg5: Arr1Ddouble, arg6: Arr1Ddouble) -> int: ...
def pntpos(arg0: obsd_t, arg1: int, arg2: nav_t, arg3: prcopt_t, arg4: sol_t, arg5: Arr1Ddouble, arg6: ssat_t, arg7: Arr1Dchar) -> int: ...
def pos2ecef(arg0: Arr1Ddouble, arg1: Arr1Ddouble) -> None: ...
def postpos(arg0: gtime_t, arg1: gtime_t, arg2: float, arg3: float, arg4: prcopt_t, arg5: solopt_t, arg6: filopt_t, arg7: List[str], arg8: int, arg9: Arr1Dchar, arg10: str, arg11: str) -> int: ...
def pppamb(arg0: rtk_t, arg1: obsd_t, arg2: int, arg3: nav_t, arg4: Arr1Ddouble) -> int: ...
def pppnx(arg0: prcopt_t) -> int: ...
def pppos(arg0: rtk_t, arg1: obsd_t, arg2: int, arg3: nav_t) -> None: ...
def pppoutsolstat(arg0: rtk_t, arg1: int, arg2: _IO_FILE) -> None: ...
def read_leaps(arg0: str) -> int: ...
def readblq(arg0: str, arg1: str, arg2: Arr1Ddouble) -> int: ...
def readdcb(arg0: str, arg1: nav_t) -> int: ...
def readerp(arg0: str, arg1: erp_t) -> int: ...
def readnav(arg0: str, arg1: nav_t) -> int: ...
def readpcv(arg0: str, arg1: pcvs_t) -> int: ...
def readpos(arg0: str, arg1: str, arg2: Arr1Ddouble) -> None: ...
def readrnx(arg0: str, arg1: int, arg2: str, arg3: obs_t, arg4: nav_t, arg5: sta_t) -> int: ...
def readrnxc(arg0: str, arg1: nav_t) -> int: ...
def readrnxt(arg0: str, arg1: int, arg2: gtime_t, arg3: gtime_t, arg4: float, arg5: str, arg6: obs_t, arg7: nav_t, arg8: sta_t) -> int: ...
def readsap(arg0: str, arg1: gtime_t, arg2: nav_t) -> int: ...
def readsol(arg0: List[str], arg1: int, arg2: solbuf_t) -> int: ...
def readsolstat(arg0: List[str], arg1: int, arg2: solstatbuf_t) -> int: ...
def readsolstatt(arg0: List[str], arg1: int, arg2: gtime_t, arg3: gtime_t, arg4: float, arg5: solstatbuf_t) -> int: ...
def readsolt(arg0: List[str], arg1: int, arg2: gtime_t, arg3: gtime_t, arg4: float, arg5: int, arg6: solbuf_t) -> int: ...
def readsp3(arg0: str, arg1: nav_t, arg2: int) -> None: ...
def readtec(arg0: str, arg1: nav_t, arg2: int) -> None: ...
def reppath(arg0: str, arg1: Arr1Dchar, arg2: gtime_t, arg3: str, arg4: str) -> int: ...
def reppaths(arg0: str, arg1: List[str], arg2: int, arg3: gtime_t, arg4: gtime_t, arg5: str, arg6: str) -> int: ...
def resetsysopts() -> None: ...
def rtk_crc16(arg0: Arr1Dunsignedchar, arg1: int) -> int: ...
def rtk_crc24q(arg0: Arr1Dunsignedchar, arg1: int) -> int: ...
def rtk_crc32(arg0: Arr1Dunsignedchar, arg1: int) -> int: ...
def rtkclosestat() -> None: ...
def rtkfree(arg0: rtk_t) -> None: ...
def rtkinit(arg0: rtk_t, arg1: prcopt_t) -> None: ...
def rtkopenstat(arg0: str, arg1: int) -> int: ...
def rtkpos(arg0: rtk_t, arg1: obsd_t, arg2: int, arg3: nav_t) -> int: ...
def rtkpos_test_hello() -> None: ...
def rtksvrclosestr(arg0: rtksvr_t, arg1: int) -> None: ...
def rtksvrfree(arg0: rtksvr_t) -> None: ...
def rtksvrinit(arg0: rtksvr_t) -> int: ...
def rtksvrlock(arg0: rtksvr_t) -> None: ...
def rtksvropenstr(arg0: rtksvr_t, arg1: int, arg2: int, arg3: str, arg4: solopt_t) -> int: ...
def rtksvrostat(arg0: rtksvr_t, arg1: int, arg2: gtime_t, arg3: Arr1Dint, arg4: Arr1Ddouble, arg5: Arr1Ddouble, arg6: List[List[int]], arg7: Arr1Dint) -> int: ...
def rtksvrsstat(arg0: rtksvr_t, arg1: Arr1Dint, arg2: Arr1Dchar) -> None: ...
def rtksvrstart(arg0: rtksvr_t, arg1: int, arg2: int, arg3: Arr1Dint, arg4: List[str], arg5: Arr1Dint, arg6: int, arg7: List[str], arg8: List[str], arg9: int, arg10: int, arg11: Arr1Ddouble, arg12: prcopt_t, arg13: solopt_t, arg14: stream_t) -> int: ...
def rtksvrstop(arg0: rtksvr_t, arg1: List[str]) -> None: ...
def rtksvrunlock(arg0: rtksvr_t) -> None: ...
def rtkuncompress(arg0: str, arg1: Arr1Dchar) -> int: ...
def satantoff(arg0: gtime_t, arg1: Arr1Ddouble, arg2: int, arg3: nav_t, arg4: Arr1Ddouble) -> None: ...
def satazel(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble) -> float: ...
def satexclude(arg0: int, arg1: int, arg2: prcopt_t) -> int: ...
def satid2no(arg0: str) -> int: ...
def satno(arg0: int, arg1: int) -> int: ...
def satno2id(arg0: int, arg1: Arr1Dchar) -> None: ...
def satpos(arg0: gtime_t, arg1: gtime_t, arg2: int, arg3: int, arg4: nav_t, arg5: Arr1Ddouble, arg6: Arr1Ddouble, arg7: Arr1Ddouble, arg8: Arr1Dint) -> int: ...
def satposs(arg0: gtime_t, arg1: obsd_t, arg2: int, arg3: nav_t, arg4: int, arg5: Arr1Ddouble, arg6: Arr1Ddouble, arg7: Arr1Ddouble, arg8: Arr1Dint) -> None: ...
def satsys(arg0: int, arg1: Arr1Dint) -> int: ...
def satwavelen(arg0: int, arg1: int, arg2: nav_t) -> float: ...
def savenav(arg0: str, arg1: nav_t) -> int: ...
def saveopts(arg0: str, arg1: str, arg2: str, arg3: opt_t) -> int: ...
def sbsdecodemsg(arg0: gtime_t, arg1: int, arg2: Arr1Dunsignedint, arg3: sbsmsg_t) -> int: ...
def sbsioncorr(arg0: gtime_t, arg1: nav_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: Arr1Ddouble) -> int: ...
def sbsoutmsg(arg0: _IO_FILE, arg1: sbsmsg_t) -> None: ...
def sbsreadmsg(arg0: str, arg1: int, arg2: sbs_t) -> int: ...
def sbsreadmsgt(arg0: str, arg1: int, arg2: gtime_t, arg3: gtime_t, arg4: sbs_t) -> int: ...
def sbssatcorr(arg0: gtime_t, arg1: int, arg2: nav_t, arg3: Arr1Ddouble, arg4: Arr1Ddouble, arg5: Arr1Ddouble) -> int: ...
def sbstropcorr(arg0: gtime_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble) -> float: ...
def sbsupdatecorr(arg0: sbsmsg_t, arg1: nav_t) -> int: ...
def screent(arg0: gtime_t, arg1: gtime_t, arg2: gtime_t, arg3: float) -> int: ...
def searchopt(arg0: str, arg1: opt_t) -> opt_t: ...
def searchpcv(arg0: int, arg1: str, arg2: gtime_t, arg3: pcvs_t) -> pcv_t: ...
def seph2clk(arg0: gtime_t, arg1: seph_t) -> float: ...
def seph2pos(arg0: gtime_t, arg1: seph_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble) -> None: ...
def setbits(arg0: Arr1Dunsignedchar, arg1: int, arg2: int, arg3: int) -> None: ...
def setbitu(arg0: Arr1Dunsignedchar, arg1: int, arg2: int, arg3: int) -> None: ...
def setcodepri(arg0: int, arg1: int, arg2: str) -> None: ...
def setsysopts(arg0: prcopt_t, arg1: solopt_t, arg2: filopt_t) -> None: ...
def settime(arg0: gtime_t) -> None: ...
def settspan(arg0: gtime_t, arg1: gtime_t) -> None: ...
def sleepms(arg0: int) -> None: ...
def smoother(arg0: Arr1Ddouble, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: int, arg5: Arr1Ddouble, arg6: Arr1Ddouble) -> int: ...
def solve(arg0: str, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: int, arg4: int, arg5: Arr1Ddouble) -> int: ...
def sortobs(arg0: obs_t) -> int: ...
def str2num(arg0: str, arg1: int, arg2: int) -> float: ...
def str2opt(arg0: opt_t, arg1: str) -> int: ...
def str2time(arg0: str, arg1: int, arg2: int, arg3: gtime_t) -> int: ...
def strclose(arg0: stream_t) -> None: ...
def strconvfree(arg0: strconv_t) -> None: ...
def strconvnew(arg0: int, arg1: int, arg2: str, arg3: int, arg4: int, arg5: str) -> strconv_t: ...
def strgettime(arg0: stream_t) -> gtime_t: ...
def strinit(arg0: stream_t) -> None: ...
def strinitcom() -> None: ...
def strlock(arg0: stream_t) -> None: ...
def stropen(arg0: stream_t, arg1: int, arg2: int, arg3: str) -> int: ...
def strread(arg0: stream_t, arg1: Arr1Dunsignedchar, arg2: int) -> int: ...
def strsendcmd(arg0: stream_t, arg1: str) -> None: ...
def strsendnmea(arg0: stream_t, arg1: Arr1Ddouble) -> None: ...
def strsetdir(arg0: str) -> None: ...
def strsetopt(arg0: Arr1Dint) -> None: ...
def strsetproxy(arg0: str) -> None: ...
def strsettimeout(arg0: stream_t, arg1: int, arg2: int) -> None: ...
def strstat(arg0: stream_t, arg1: Arr1Dchar) -> int: ...
def strsum(arg0: stream_t, arg1: Arr1Dint, arg2: Arr1Dint, arg3: Arr1Dint, arg4: Arr1Dint) -> None: ...
def strsvrinit(arg0: strsvr_t, arg1: int) -> None: ...
def strsvrstart(arg0: strsvr_t, arg1: Arr1Dint, arg2: Arr1Dint, arg3: List[str], arg4: List[List[strconv_t]], arg5: str, arg6: Arr1Ddouble) -> int: ...
def strsvrstat(arg0: strsvr_t, arg1: Arr1Dint, arg2: Arr1Dint, arg3: Arr1Dint, arg4: Arr1Dchar) -> None: ...
def strsvrstop(arg0: strsvr_t, arg1: str) -> None: ...
def strsync(arg0: stream_t, arg1: stream_t) -> None: ...
def strunlock(arg0: stream_t) -> None: ...
def strwrite(arg0: stream_t, arg1: Arr1Dunsignedchar, arg2: int) -> int: ...
def sunmoonpos(arg0: gtime_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: Arr1Ddouble) -> None: ...
def test_glostr(arg0: Arr1Dunsignedchar) -> int: ...
def testsnr(arg0: int, arg1: int, arg2: float, arg3: float, arg4: snrmask_t) -> int: ...
def tickget() -> int: ...
def tidedisp(arg0: gtime_t, arg1: Arr1Ddouble, arg2: int, arg3: erp_t, arg4: Arr1Ddouble, arg5: Arr1Ddouble) -> None: ...
def time2bdt(arg0: gtime_t, arg1: Arr1Dint) -> float: ...
def time2doy(arg0: gtime_t) -> float: ...
def time2epoch(arg0: gtime_t, arg1: Arr1Ddouble) -> None: ...
def time2gpst(arg0: gtime_t, arg1: Arr1Dint) -> float: ...
def time2gst(arg0: gtime_t, arg1: Arr1Dint) -> float: ...
def time2str(arg0: gtime_t, arg1: Arr1Dchar, arg2: int) -> None: ...
def time_str(arg0: gtime_t, arg1: int) -> str: ...
def timeadd(arg0: gtime_t, arg1: float) -> gtime_t: ...
def timediff(arg0: gtime_t, arg1: gtime_t) -> float: ...
def timeget() -> gtime_t: ...
def timeset(arg0: gtime_t) -> None: ...
def tle_name_read(arg0: str, arg1: tle_t) -> int: ...
def tle_pos(arg0: gtime_t, arg1: str, arg2: str, arg3: str, arg4: tle_t, arg5: erp_t, arg6: Arr1Ddouble) -> int: ...
def tle_read(arg0: str, arg1: tle_t) -> int: ...
def tokyo2jgd(arg0: Arr1Ddouble) -> int: ...
def traceb(arg0: int, arg1: Arr1Dunsignedchar, arg2: int) -> None: ...
def traceclose() -> None: ...
def tracegnav(arg0: int, arg1: nav_t) -> None: ...
def tracehnav(arg0: int, arg1: nav_t) -> None: ...
def tracelevel(arg0: int) -> None: ...
def tracemat(arg0: int, arg1: Arr1Ddouble, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...
def tracenav(arg0: int, arg1: nav_t) -> None: ...
def traceobs(arg0: int, arg1: obsd_t, arg2: int) -> None: ...
def traceopen(arg0: str) -> None: ...
def tracepclk(arg0: int, arg1: nav_t) -> None: ...
def tracepeph(arg0: int, arg1: nav_t) -> None: ...
def tropcorr(arg0: gtime_t, arg1: nav_t, arg2: Arr1Ddouble, arg3: Arr1Ddouble, arg4: int, arg5: Arr1Ddouble, arg6: Arr1Ddouble) -> int: ...
def tropmapf(arg0: gtime_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble) -> float: ...
def tropmodel(arg0: gtime_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: float) -> float: ...
def uniqnav(arg0: nav_t) -> None: ...
def utc2gmst(arg0: gtime_t, arg1: float) -> float: ...
def utc2gpst(arg0: gtime_t) -> gtime_t: ...
def windupcorr(arg0: gtime_t, arg1: Arr1Ddouble, arg2: Arr1Ddouble, arg3: Arr1Ddouble) -> None: ...
def xyz2enu(arg0: Arr1Ddouble, arg1: Arr1Ddouble) -> None: ...
def zeros(arg0: int, arg1: int) -> float: ...
