name: Build and Test Wheels New

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - macostest
  # pull_request:
  #   branches:
  #     - macostest

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: 3.12
            cibw-build: cp312-manylinux_x86_64
          - os: ubuntu-latest
            python-version: 3.13
            cibw-build: cp313-manylinux_x86_64
          - os: macos-14
            python-version: 3.12
            cibw-build: cp312-macosx_arm64
          - os: macos-14
            python-version: 3.13
            cibw-build: cp313-macosx_arm64
          - os: macos-13
            python-version: 3.12
            cibw-build: cp312-macosx_x86_64
          - os: macos-13
            python-version: 3.13
            cibw-build: cp313-macosx_x86_64
          - os: windows-2022
            python-version: 3.12
            cibw-build: cp312-win_amd64
          - os: windows-2022
            python-version: 3.13
            cibw-build: cp313-win_amd64

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.23.3
      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.cibw-build }}
      - name: Upload individual wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-py${{ matrix.python-version }}-${{ matrix.os }}-${{ matrix.cibw-build }}
          path: wheelhouse/*.whl


  # ✅ 新增 job：收集所有 wheels 并打包
  package-wheels:
    name: Package All Wheels
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded_wheels/

      - name: Collect all .whl files into one directory
        run: |
          mkdir -p dist/
          find downloaded_wheels/ -name "*.whl" -exec cp {} dist/ \;

      - name: Upload unified artifact for PyPI and Release
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels
          path: dist/*.whl

      - name: Get version from setup.py
        id: get_version
        run: |
          python -m pip install setuptools
          VERSION=$(python setup.py --version)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body: "Automated release by GitHub Actions."
          draft: false
          prerelease: false
          files: dist/*.whl  # 直接上传所有 wheels 作为 assets

  # ✅ 修复 PyPI 发布
  pypi-publish:
    runs-on: ubuntu-latest
    needs: package-wheels
    permissions:
      id-token: write
    environment:
      name: pypi
    steps:
      - name: Download unified wheels
        uses: actions/download-artifact@v4
        with:
          name: python-wheels
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
