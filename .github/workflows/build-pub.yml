name: Build and Test Wheels

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - macostest
  # pull_request:
  #   branches:
  #     - macostest

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: 3.7
            cibw-build: cp37-manylinux_x86_64
          - os: ubuntu-latest
            python-version: 3.8
            cibw-build: cp38-manylinux_x86_64
          - os: ubuntu-latest
            python-version: 3.9
            cibw-build: cp39-manylinux_x86_64
          - os: ubuntu-latest
            python-version: "3.10"
            cibw-build: cp310-manylinux_x86_64
          - os: ubuntu-latest
            python-version: 3.11
            cibw-build: cp311-manylinux_x86_64
          - os: macos-14
            python-version: 3.8
            cibw-build: cp38-macosx_arm64
          - os: macos-14
            python-version: 3.9
            cibw-build: cp39-macosx_arm64
          - os: macos-14
            python-version: '3.10'
            cibw-build: cp310-macosx_arm64
          - os: macos-14
            python-version: 3.11
            cibw-build: cp311-macosx_arm64
          - os: macos-13
            python-version: 3.8
            cibw-build: cp38-macosx_x86_64
          - os: macos-13
            python-version: 3.9
            cibw-build: cp39-macosx_x86_64
          - os: macos-13
            python-version: '3.10'
            cibw-build: cp310-macosx_x86_64
          - os: macos-13
            python-version: 3.11
            cibw-build: cp311-macosx_x86_64
          - os: windows-2019
            python-version: 3.6
            cibw-build: cp36-win_amd64
          - os: windows-2019
            python-version: 3.7
            cibw-build: cp37-win_amd64
          - os: windows-2019
            python-version: 3.8
            cibw-build: cp38-win_amd64
          - os: windows-2019
            python-version: 3.9
            cibw-build: cp39-win_amd64
          - os: windows-2019
            python-version: "3.10"
            cibw-build: cp310-win_amd64
          - os: windows-2019
            python-version: 3.11
            cibw-build: cp311-win_amd64

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel
    - name: Build wheels
      run: cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: ${{ matrix.cibw-build }}
    
    - name: Upload distributions
      uses: actions/upload-artifact@v3
      with:
        name: python-wheels
        path: wheelhouse/*.whl

    # - name: Get version from setup.py
    #   id: get_version
    #   run: |
    #     VERSION=$(python setup.py --version)
    #     echo "name=VERSION::$VERSION" >> $GITHUB_OUTPUT


    # - name: Create GitHub release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ steps.get_version.outputs.VERSION }}
    #     release_name: Release ${{ steps.get_version.outputs.VERSION }}
    #     body: "Automated release by GitHub Actions."
    #     draft: false
    #     prerelease: false

    # - name: Upload wheels to release assets
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: wheelhouse/*.whl
    #     asset_name: ${{ matrix.os }}-wheels
    #     asset_content_type: application/zip
  pypi-publish:
    runs-on: ubuntu-latest

    needs:
      - build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/YOURPROJECT

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v3
        with:
          name: python-wheels
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1